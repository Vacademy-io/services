apiVersion: apps/v1
kind: Deployment
metadata:
  name: student-service
  namespace: student-service
  labels:
    app: student-service
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: student-service
  template:
    metadata:
      labels:
        app: student-service
    spec:
      containers:
        - name: student-service
          image: {{ .Values.services.student_service.image.repository }}:{{ .Values.services.student_service.image.tag }}
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "200m"
              memory: "450Mi"
            limits:
              cpu: "250m"
              memory: "600Mi"
          livenessProbe:
            httpGet:
              path: /student_service/actuator/health
              port: {{ .Values.services.student_service.port }}
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /student_service/actuator/health
              port: {{ .Values.services.student_service.port }}
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 30
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /student_service/actuator/health
              port: {{ .Values.services.student_service.port }}
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
            successThreshold: 1
          ports:
            - containerPort: {{ .Values.services.student_service.port }}